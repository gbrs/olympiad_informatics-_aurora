"""
По данному натуральному n определите количество последовательностей длины n из 0 и 1,
не содержащих трех единиц подряд. Гарантируется, что ответ не превосходит 2^31 - 1.
"""

"""
Таблица для решения методом динамического программирования
Количество возможных чисел, которые заканчиваются на 0/1:

cnt||  1  |  2  |  3  | i-1 |                i               |
0  ||  1  |  2  |  4  |  7  |    cnt[0][i-1] + cnt[1][i-1]   |  # последняя цифра числа - ноль
1  ||  1  |  2  |  3  |  6  |  cnt[0][i-1] + cnt[1][i-1] - 1 |  # последняя цифра числа - единица

Если число заканчивается на 0, то следующая цифра может быть только и 0, и 1.
А если на 1 - то надо отбросить один вариант с 11 на конце. 
Отсюда разница в формулах.
Базовые случаи - числа из одной цифры и из двух: 0, 1, 00, 01, 10, 11.
"""

n = int(input())
cnt = [[0] * n for i in range(2)]  # таблица количеств возможных чисел разной длины
# базовые случаи
cnt[0][0] = cnt[1][0] = 1
if n > 1:
    cnt[0][1] = cnt[1][1] = 2

for i in range(2, n):
    cnt[0][i] = cnt[0][i - 1] + cnt[1][i - 1]
    # если число заканчивается на 1 - то надо отбросить один вариант с 11 на конце
    cnt[1][i] = cnt[0][i - 1] + cnt[1][i - 1] - 1

print(cnt[0][n - 1] + cnt[1][n - 1])
