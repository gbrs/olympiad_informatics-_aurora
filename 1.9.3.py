"""
По данному натуральному n определите количество последовательностей длины n из 0 и 1,
не содержащих трех единиц подряд. Гарантируется, что ответ не превосходит 2^31 - 1.
"""

"""
Таблица для решения методом динамического программирования
Количество возможных чисел, которые заканчиваются на 00/01/10/11:

cnt|посл||  2  |  3  |  4  | i-1 |                i              |
0  | 00 ||  1  |  2  |  4  |  7  |   cnt[0][i-1] + cnt[2][i-1]   |  # последние цифры  - 00
1  | 01 ||  1  |  2  |  4  |  7  |   cnt[0][i-1] + cnt[2][i-1]   |
2  | 10 ||  1  |  2  |  3  |  6  |   cnt[1][i-1] + cnt[3][i-1]   |
3  | 11 ||  1  |  1  |  2  |  4  |          cnt[1][i-1]          |

При добавлении одной цифры:
  - 00 может быть построена на наборах 10 и 00;
  - а вот 11 - только на 01 (на 11 нельзя - станет три единицы подряд). 
Отсюда разница в формулах.
Базовые случаи - числа: 00, 01, 10, 11.
"""


n = int(input())
cnt = [[0] * (n + 1) for i in range(4)]  # таблица количеств возможных чисел разной длины

if n == 1:
    print(2)
else:
    # базовые случаи
    cnt[0][2] = cnt[1][2] = cnt[2][2] = cnt[3][2] = 1

    for i in range(3, n + 1):
        cnt[0][i] = cnt[0][i-1] + cnt[2][i-1]
        cnt[1][i] = cnt[0][i-1] + cnt[2][i-1]
        cnt[2][i] = cnt[1][i-1] + cnt[3][i-1]
        cnt[3][i] = cnt[1][i-1]

    print(cnt[0][n] + cnt[1][n] + cnt[2][n] + cnt[3][n])
