"""
По данному натуральному n определите количество последовательностей длины n из 0 и 1,
не содержащих двух единиц подряд. Гарантируется, что ответ не превосходит 2^31 - 1.
"""

"""
Таблица для решения методом динамического программирования
Количество возможных чисел, которые заканчиваются на 0/1:

cnt||  1  |  2  | n-1 |             n             |
0  ||  1  |  2  |  3  | cnt[0][n-1] + cnt[1][n-1] |  # последняя цифра числа - ноль
1  ||  1  |  1  |  2  |        cnt[0][n-1]        |  # последняя цифра числа - единица

Если число заканчивается на 1, то следующая цифра может быть только 0.
А если на 0 - то может быть и 0, и 1. Отсюда разница в формулах.
Базовый случай - число из одной цифры. Каковых два: 0 и 1.
"""

n = int(input())
cnt = [[0] * n for i in range(2)]  # таблица количеств возможных чисел разной длины
cnt[0][0] = cnt[1][0] = 1  # базовые случаи

for i in range(1, n):
    cnt[0][i] = cnt[0][i - 1] + cnt[1][i - 1]
    cnt[1][i] = cnt[0][i - 1]

print(cnt[0][-1] + cnt[1][-1])
