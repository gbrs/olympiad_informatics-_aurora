"""
По данному натуральному n определите количество последовательностей длины n
из 0, 1 и 2, не содержащих двух единиц подряд и двух двоек подряд.
Гарантируется, что ответ не превосходит 2^31-1.
"""

"""
Таблица для решения методом динамического программирования
Количество возможных чисел, которые заканчиваются на 0/1/2:

cnt||  1  |  2  | i-1 |                     i                   |
0  ||  1  |  3  |  7  | cnt[0][i-1] + cnt[1][i-1] + cnt[2][i-1] |  # последняя цифра числа - ноль
1  ||  1  |  2  |  5  |         cnt[0][i-1] + cnt[2][i-1]       |  # последняя цифра числа - единица
2  ||  1  |  2  |  5  |         cnt[0][i-1] + cnt[1][i-1]       |  # последняя цифра числа - двойка

Если число заканчивается на 1, то следующая цифра может быть 0 или 2.
Если число заканчивается на 2, то следующая цифра может быть 0 или 1.
А если на 0 - то может быть и 0, и 1, и 2. Отсюда разница в формулах.
Базовый случай - число из одной цифры. Каковых три: 0, 1 и 2.
"""

n = int(input())
cnt = [[0] * n for i in range(3)]  # таблица количеств возможных чисел разной длины
cnt[0][0] = cnt[1][0] = cnt[2][0] = 1  # базовые случаи

for i in range(1, n):
    cnt[0][i] = cnt[0][i - 1] + cnt[1][i - 1] + cnt[2][i - 1]
    cnt[1][i] = cnt[0][i - 1] + cnt[2][i - 1]
    cnt[2][i] = cnt[0][i - 1] + cnt[1][i - 1]

print(cnt[0][-1] + cnt[1][-1] + cnt[2][-1])
